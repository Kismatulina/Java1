import java.util.Scanner;
import java.util.logging.Logger;
//package task3;
/**–ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
üìå –ü–æ—Å—á–∏—Ç–∞–π—Ç–µ —Å–∫–æ–ª—å–∫–æ ‚Äô‚Äô–¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –∫–∞–º–Ω–µ–π‚Äô‚Äô –≤ –∫—É—á–µ ‚Äô‚Äô–æ–±—ã—á–Ω—ã—Ö
–∫–∞–º–Ω–µ–π‚Äô‚Äô
üìå –ü—Ä–∏–º–µ—Ä: jewels = ‚ÄúaB‚Äù, stones = ‚ÄúaaaAbbbB‚Äù
üìå –†–µ–∑—É–ª—å—Ç–∞—Ç: ‚Äùa3B1‚Äù */


public class Main {
    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);
        Logger logger = Logger.getLogger("Main");
        logger.info("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–µ–π");
        String jawels = scanner.next();
        logger.info("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å–æ–¥–µ—Ä–∂–∞—â—É—é –æ–±—ã—á–Ω—ã–µ –∫–∞–º–Ω–∏");
        String stones = scanner.next();
        if (jawels.length() == 0) {
            throw new Exception("–ù–µ –≤–≤–µ–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–π –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç—è–º");
        }
        if (stones.length() == 0){
            throw new Exception("–ù–µ –≤–≤–µ–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–π –∫—É—á–µ –æ–±—ã—á–Ω—ã—Ö –∫–∞–º–µ–Ω–µ–π");
        }

        int counter = 0; // —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º –ø–µ—Ä–µ–º –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –¥—Ä–∞–≥–æ—Ü–Ω—Å—Ç–∏
        StringBuilder sb = new StringBuilder();
        for(char c1: jawels.toCharArray()){ //–ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ —ç—Ç–æ–º—É –º–∞—Å—Å–∏–≤—É jawelString
            for(char c2: stones.toCharArray()){ // —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —ç—Ç–∏–º –º–∞—Å—Å–∏–≤–æ–º
                if(c1 == c2){
                counter++; // –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã —Å–∏–º–≤–æ–ª—ã, —Ç–æ –∫ —Å—á–µ—Ç—á–∏–∫—É –ø—Ä–∏–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω
            }
        }
        sb.append(c1) // –≤ StringBuilder –¥–æ–±–∞–≤–ª—è–µ–º —Å1,—Ç.–∫ –∏—Å–∫–∞–ª–∏ jawels –¥—Ä–∞–≥—Ü–Ω—Ç–∏ –µ–≥–æ –≤ —Å—Ç—Ä–æ—á–∫–µ stones 
                .append(":") // –∑–∞—Ç–µ–º –∑–¥–µ—Å—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–ª–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
                .append(counter)
                .append("");
        counter = 0; // –∏ –æ–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
        }
    logger.info(sb.toString());
    }

}
// –æ—Ç–≤–µ—Ç a:3B:1